# Ultralytics YOLO 🚀, GPL-3.0 license
# Default training settings and hyperparameters for medium-augmentation COCO training

# ==============================================================
# 2. 모델 예측
  # 1) 변수 불러오기
# ==============================================================
# --------------------------------------------------------------
# (1) 모드 선택
# --------------------------------------------------------------
# 1] Task 종류 (detect / segment / classify)
task: detect
# 2] 학습 종류 (train / val / predict / export)
mode: train

# --------------------------------------------------------------
# (2) Train 설정
# --------------------------------------------------------------
# 1] 기본 설정
# [1] 이름 설정
project:                  # Project Name
name:                     # Experiment Name (Results Saved to 'project/name' Directory)
# [2] 기본 설정
seed: 0                   # Random Seed for Reproducibility
# [3] Resume 설정
# 1]] Resume 설정
resume: False             # Resume Training from Last Checkpoint
exist_ok: False           # Whether to Overwrite Existing Experiment
# 2]] 사전 학습 모델 설정
pretrained: False         # Whether to Use a Pretrained Model

# 2] 데이터 설정
# [1] 파일 불러오기
data:                     # Path to Data File (coco128.yaml)
model:                    # Path to Model File (yolov8n.pt, yolov8n.yaml)
# [2] DataLoader 설정
workers: 8                # Number of Worker Threads : Data Loading (per RANK if DDP)
batch: 16                 # Number of Images per Batch (-1 for AutoBatch)

# 3] 하드웨어 설정
device:                   # Device to Run On (cuda device=0 or device=0,1,2,3 or device=cpu)
cache: False              # True/ram, disk or False. Use cache for data loading # 이게 뭐임???

# 4] Model 설정
imgsz: 640                # Size of Input Images as Integer (w, h)

# 5] Optimizer 설정
optimizer: SGD            # Optimizer (choices=['SGD', 'Adam', 'AdamW', 'RMSProp'])
cos_lr: False             # Scheduler - Cosine

# 6] Train 에포크 설정
epochs: 100               # Number of Epochs
patience: 50              # Patience Epochs # 이게 뭐임???

# 7] 파일 저장 설정
save: True                # Save Train Checkpoints / Predict Results
save_period: -1           # Save Checkpoint Every x Epochs (Disabled if < 1)
verbose: True             # Save Log = Whether to Print Verbose Output

# 8] 모르겠음
deterministic: True       # Whether to Enable Deterministic Mode # 이게 뭐임???
single_cls: False         # Train Multi-Class Data as Single-Class # 이게 뭐임???
image_weights: False      # Use Weighted Image Selection for Training # 이게 뭐임???
rect: False               # Support Rectangular Training if mode='train' / Support Rectangular Evaluation if mode='val' # 이게 뭐임???
close_mosaic: 10          # disable mosaic augmentation for final 10 epochs # 이게 뭐임???

# Segmentation
overlap_mask: True        # masks should overlap during training (segment train only) # 이게 뭐임???
mask_ratio: 4             # mask downsample ratio (segment train only) # 이게 뭐임???
# Classification
dropout: 0.0              # Dropout 설정 : Regularization 설정 (classify train only) # 이게 뭐임???

# --------------------------------------------------------------
# (3) Val / Test 설정
# --------------------------------------------------------------
# 1] Val 설정
val: True                 # Val/Test during Training

# 2] Data Split 설정
split: val                # Data Split : Val Dataset 확보 ('Val', 'Test' or 'Train')

# 3] 파일 설정 - 저장
save_json: False          # Save Results to JSON File
save_hybrid: False        # Save Hybrid Version of Labels (Labels + Additional Predictions) # 이게 뭐임???
plots: True               # Save Plots during Train/Val

# 4] 예측 기준 설정
conf:                     # Object Confidence Threshold for Detection (Default 0.25 predict, 0.001 Val)
iou: 0.7                  # Intersection over Union (IoU) Threshold for NMS

# 5] 최대 검출 개수
max_det: 300              # Maximum Number of Detections per Image

# 6] 속도 최적화
half: False               # Use Half Precision (FP16)

# 7] 딥러닝 추론
dnn: False                # Use OpenCV DNN for ONNX Inference

# --------------------------------------------------------------
# (4) Prediction 설정
# --------------------------------------------------------------
# 1] 시각화 설정
# [1] 이미지 시각화
show: False               # Show Results if Possible
hide_labels: False        # Hide Labels
hide_conf: False          # Hide Confidence Scores
line_thickness: 3         # Bounding Box Thickness (Pixels)
agnostic_nms: False       # Class-Agnostic NMS : Classification 없이 물체의 Bounding Box만 찾고 싶은 경우 # 이게 뭐임???
classes:                  # Filter Results by Class (class=0 or class=[0,2,3]) # 이게 뭐임???
# [2] Segmentation 시각화
retina_masks: False       # Use High-Resolution Segmentation Masks
boxes: True               # Show Boxes in Segmentation Predictions
# [3] 영상 시각화
vid_stride: 1             # Video Frame-Rate Stride
# [4] 모델 시각화
visualize: False          # visualize model features

# 2] 파일 저장 설정
# [1] 저장 경로
source:                   # Source Directory : Images or Videos
# [2] txt 파일
save_txt: False           # Save Results as .txt File # 파일 경로 어디???
# [3] 저장 정보 설정
save_conf: False          # Save Results with Confidence Scores
save_crop: False          # Save Results with Cropped Images

# 3] 기타
augment: False            # Apply Image Augmentation to Prediction Sources # 이게 뭐임???

# --------------------------------------------------------------
# (5) Export 설정
# --------------------------------------------------------------
format: torchscript  # format to export to
keras: False  # use Keras
optimize: False  # TorchScript: optimize for mobile
int8: False  # CoreML/TF INT8 quantization
dynamic: False  # ONNX/TF/TensorRT: dynamic axes
simplify: False  # ONNX: simplify model
opset:  # ONNX: opset version (optional)
workspace: 4  # TensorRT: workspace size (GB)
nms: False  # CoreML: add NMS

# --------------------------------------------------------------
# (6) 하이퍼파라미터 설정
# --------------------------------------------------------------
# 1] Learning Rate
lr0: 0.01                 # Initial Learning Rate (SGD=1E-2, Adam=1E-3)
lrf: 0.01                 # Final Learning Rate (lr0 * lrf)

# 2] Optimizer
momentum: 0.937           # SGD Momentum / Adam Beta1
weight_decay: 0.0005      # Optimizer Weight Decay (5e-4)

warmup_epochs: 3.0        # Warmup Epochs (Fractions OK)
warmup_momentum: 0.8      # Warmup Initial Momentum # 이게 뭐임???
warmup_bias_lr: 0.1       # Warmup Initial Bias lr # 이게 뭐임???

# 3] Loss
box: 7.5                  # Box Loss Gain # 이게 뭐임???
cls: 0.5                  # Class Loss Gain (scale with pixels) # 이게 뭐임???
dfl: 1.5                  # dfl loss gain # 이게 뭐임???
fl_gamma: 0.0             # Focal Loss Gamma (efficientDet default gamma=1.5) # 이게 뭐임???

# 4] Regularization
label_smoothing: 0.0      # Label Smoothing (Fraction)
nbs: 64                   # Nominal Batch Size = 공칭 Batch Size # 이게 뭐임???

# 5] Augmentation
# [1] HSV
hsv_h: 0.015              # Image HSV-Hue Augmentation (Fraction) # 이게 뭐임???
hsv_s: 0.7                # Image HSV-Saturation Augmentation (Fraction) # 이게 뭐임???
hsv_v: 0.4                # Image HSV-Value Augmentation (Fraction) # 이게 뭐임???
# [2] Rotation / Translation
degrees: 0.0              # Image Rotation (+/- Deg)
translate: 0.1            # Image Translation (+/- Fraction)
# [3] Scale
scale: 0.5                # Image Scale (+/- Gain)
# [4] Shear / Perspective
shear: 0.0                # Image Shear (+/- Deg)
perspective: 0.0          # Image Perspective (+/- Fraction), range 0-0.001 # 이게 뭐임???
# [5] Flip
flipud: 0.0               # Image Flip Up-Down (Probability)
fliplr: 0.5               # Image Flip Left-Right (Probability)
# [6] ETC
mosaic: 1.0               # Image Mosaic (Probability) # 이게 뭐임???
mixup: 0.0                # Image Mix-Up (Probability) # 이게 뭐임???
copy_paste: 0.0           # Segment Copy-Paste (Probability) # 이게 뭐임???

# Custom config.yaml ---------------------------------------------------------------------------------------------------
cfg:  # for overriding defaults.yaml

# Debug, do not modify -------------------------------------------------------------------------------------------------
v5loader: False  # use legacy YOLOv5 dataloader

# Tracker settings ------------------------------------------------------------------------------------------------------
tracker: botsort.yaml  # tracker type, ['botsort.yaml', 'bytetrack.yaml']
